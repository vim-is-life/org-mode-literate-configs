#+TITLE: Shell Configs
#+DATE: 2021-10-25
#+OPTIONS: author:nil toc:nil num:nil
#+STARTUP: fold
#+MACRO: path ~$PATH~

* PATH Additions and Shell Variables
:PROPERTIES:
:header-args: :exports none :tangle ~/.config/shell/path_additions :results neither
:END:

Add programs to shell's {{{path}}}.

Add private bin directory to path (prepend).
#+begin_src bash
### FILE AUTOMATICALLY TANGLED FROM ~/.config/org-mode-literate-configs/shell-config.org ###
export PATH="$HOME/.local/bin:$PATH"
#+end_src

Make a variable to help make my neovim configuration cross-platform.
#+begin_src bash
export NVIM_CONF_DIR="$HOME/.config/"
#+end_src

Environmental variables for java 17.
#+begin_src bash
export JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64"
export PATH="$PATH:$JAVA_HOME/bin"
#+end_src

Add the emacs dir with doom commands to {{{path}}}.
#+begin_src bash
export PATH="$PATH:$HOME/.emacs.d/bin"
#+end_src

Add GNU Icecat dir to {{{path}}} (prepend).
#+begin_src bash
export PATH="$HOME/.local/bin/icecat:$PATH"
#+end_src

Add mermaid dir to {{{path}}} (prepend).
#+begin_src bash
export PATH="$PATH:$HOME/.local/bin/node_modules/.bin"
#+end_src

MPD configuration environmental variables.
#+begin_src bash
export MPD_HOST="localhost"
export MPD_PORT="6601"
#+end_src
* Aliases
:PROPERTIES:
:header-args: :exports none :tangle ~/.config/shell/bash_and_zsh_aliases :results neither
:END:
** Grep Aliases
#+begin_src bash
#!/usr/bin/env bash

### FILE AUTOMATICALLY TANGLED FROM ~/.config/org-mode-literate-configs/shell-config.org ###

if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi
#+end_src

** ~ls~ Aliases
#+begin_src bash
alias l='ls -CF'
alias la='ls -A'
alias ll='ls -alF'
#+end_src

** Alert Alias
Add an "alert" alias for long running commands.  Use like so: ~sleep 10; alert~
#+begin_src bash
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo
error)" "$(history|tail -n1|sed -e
'\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
#+end_src
** Custom Aliases
Clear the screen, and shorten update and upgrade.
#+begin_src bash
alias c='clear'
alias up='sudo apt-fast update'
alias ug='sudo apt-fast upgrade'
#+end_src
Exa alias to come later.
#+begin_src bash
# TODO install exa, look into if it affects dired
# alias ls="exa -lh"
#+end_src
Surfshark alias to connect and disconnect.
#+begin_src bash
alias vcon='sudo surfshark-vpn attack'
alias vdis='sudo surfshark-vpn down'
alias vstat='surfshark-vpn status'
alias vpn='sudo surfshark-vpn'
alias vmult='sudo surfshark-vpn multi'
#+end_src
Alias to download a template for a .gitignore file.
#+begin_src bash
alias mkgi='curl -#Lo .gitignore https://gitignore.io/api/linux,windows,vim,emacs,java,python,julia,haskell,intellij,eclipse'
#+end_src
* Shell RC files
** Bash
:PROPERTIES:
:header-args: :exports none :tangle ~/.bashrc :results neither
:END:
*** Defaults
=~/.bashrc: executed by bash(1) for non-login shells.=

These are the default settings in the =.bashrc= file.
#+begin_src bash
### FILE AUTOMATICALLY TANGLED FROM ~/.config/org-mode-literate-configs/shell-config.org ###
# for examples

# If not running interactively, don't do anything
case $- in
    ,*i*) ;;
      ,*) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
,*)
    ;;
esac


# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Alias definitions.
. "$HOME/.config/shell/bash_and_zsh_aliases"

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/shark/.local/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/shark/.local/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/shark/.local/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/shark/.local/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

#+end_src
*** Source the files with {{{path}}} additions
#+begin_src bash
source ~/.config/shell/path_additions
#+end_src
** zsh
:PROPERTIES:
:header-args: :exports none :tangle ~/.zshrc :results neither
:END:
*** Defaults
#+begin_src bash
### FILE AUTOMATICALLY TANGLED FROM ~/.config/org-mode-literate-configs/shell-config.org ###

# The following lines were added by compinstall

zstyle ':completion:*' completer _expand _complete _ignored _approximate
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' matcher-list ''
zstyle :compinstall filename '/home/shark/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt autocd extendedglob
bindkey -e
# End of lines configured by zsh-newuser-install
#+end_src
*** Source files
#+begin_src bash
source ~/.config/shell/path_additions
source ~/.config/shell/bash_and_zsh_aliases
#+end_src
*** Cool stuff
Show system info on startup.
#+begin_src bash
neofetch
#+end_src
*** Set prompt
#+begin_src bash
autoload -U colors && colors	# Load colors
PS1="%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M %{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b "
#+end_src
